package Sim;

import java.util.Random;

/**
 * @author Bambanza
 *
 * This class creates a lossy link which infer delay and Jitter and extends Link class. 
 *
 */
public class Lab1 extends Link {

	private double  _delay=0;
	private double _Jitter =0;
	private double  _packet_loss_probability=0.0; 
	private int _now=0;
	
	
	public void setConnector(SimEnt connectTo)
	{
		if (_connectorA == null) 
			_connectorA=connectTo;
		else
			_connectorB=connectTo;
	}
	
	/**
	 * we have three parameters which may cause a link to be lossy by creating a Delay,Jitter and a probability for packet loss
	 * 
	 * @param delay  represents a Time delay
	 * @param Jitter represents a Jitter that is calculated on base of Gaussian Distribution.
	 * @param probability represents the probability of a Packet to get lost.
	 */
	public Lab1(int delay, int Jitter,double probability)
	{
		super();	
		this._delay=delay;
		this._packet_loss_probability= probability;
	}
	
     public double packetdroprobability()
	
	{
		Random ran=new Random();
		_packet_loss_probability=ran.nextInt(100);
		return _packet_loss_probability/100;
	}
	
	public double Jitter()
	{    Random randomno = new Random();
		return(_Jitter*randomno.nextGaussian());
	}
	public void recv(SimEnt src, Event ev)
	
	{  
		if (ev instanceof Message)
		{
			if ((new Random().nextInt(100))<=_packet_loss_probability)
		   { 
			System.out.println("Link recv msg, but got lost");
		   } 
		
		else {
			
			System.out.println("Link recv msg, passes it through");
			if (src == _connectorA)
			{
				send(_connectorB, ev, _now+ _delay+ Jitter());
			}
			else
			{
				send(_connectorA, ev, _now+ _delay+ Jitter());
			}
		}
	}	
}}
	
	
	

